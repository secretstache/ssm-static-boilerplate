{% macro columns(props) %}
    {#    /**#}
    {#    * @param {string} alignY - start, end, center, baseline, stretch #}
    {#    * @param {string} justify -  normal, start, end, center, between, around, evenly, stretch #}
    {#    * @param {string} width #}
    {#    * @param {string} containerAlign - center, right #}
    {#    * @param {string} class #}
    {#    */#}

    {% set classes = ([
        'grid grid-cols-12 gap-x-[--grid-column-gap] gap-y-[--grid-row-gap]',
        props.class if props.class,
        'items-' + props.alignY if props.alignY,
        'justify-' + props.alignX if props.alignX,
        'w-' + props.width if props.width,
        'mx-auto' if props.containerAlign  == 'center',
        'ml-auto' if props.containerAlign  == 'right'
    ]) | toClassNames %}

    <div class="{{ classes }}">

        {% if caller %}{{ caller() | safe }}{% endif %}

    </div>
{% endmacro %}


{% macro column(props) %}
    {% set classes = ([
        'col-span-12',
        'md:col-span-' + props.width if props.width,
        props.class if props.class
    ]) | toClassNames %}

    <div class="{{ classes }}">

            {% if caller %}
                {{ caller() | safe }}
            {% endif %}

    </div>

{% endmacro %}


{% macro module(name, props) %}
    {%- from "../modules/" + name + "/" + name + ".njk" import render -%}

    {%- if caller -%}
        {%- call render( props ) %}{{ caller() }}{% endcall -%}
    {%- else -%}
        {{- render( props ) -}}
    {%- endif -%}
{% endmacro %}


{%- macro template(name, props) -%}
    {#    /**#}
    {#    * @param {string} class#}
    {#    * @param {string} id#}
    {#    * @param {object} templateHeader - { headline: 'string', preheadline: 'string', icon: 'string', subheadline: 'string', class: 'string', headers: 'array' }#}
    {#    * @param {string} bg - { image | video | color }#}
    {#    */#}

    {%- from "../templates/" + name + "/" + name + ".njk" import render -%}

    {% set classes = ([
        'template-' + name,
        'content-block relative',
        'pt-[--base-margin] pb-[--base-margin] first:mt-0' if props.bg,
        'bg-' + props.bg.color if props.bg.color,
        props.class if props.class
    ]) | toClassNames %}

    {% set templateHeader = props.templateHeader %}

    {%  set id = ' id="' + props.id + '"' if props.id %}

    <section class="{{ classes }}"{{ id }}>

        {% if templateHeader %}

            {% set classes = ([
                templateHeader.class if templateHeader.class
            ]) | toClassNames %}

            <header class="mb-8 {{ classes }}">

                <div class="container">
                    {% if templateHeader.preheadline %}
                        <p>{{ templateHeader.preheadline | safe }}</p>
                    {% endif %}

                    {% set headlineTag = templateHeader.tag if templateHeader.tag else 'h2' %}

                    {% if templateHeader.headline %}
                    <{{ headlineTag }}>
                        {{ templateHeader.headline | safe }}
                    </{{ headlineTag }}>
                    {% endif %}

                    {% if templateHeader.description %}
                        <p>{{ templateHeader.description | safe }}</p>
                    {% endif %}

                    {#  ...or array of headers#}
                    {% for header in templateHeader.headers %}
                        {% set headerTag = header.tag if header.tag else 'h2' %}

                        {% set classes = ([
                            header.class if header.class,
                            header.size if header.size
                        ]) | toClassNames %}


                        <{{ headerTag }}{% if classes %} class="{{ classes }}"{% endif %}>{{ header.text | safe }}</{{ headerTag }}>
                    {% endfor %}
                </div>

            </header>
        {% endif %}

        {% if props.bg.image or props.bg.video %}
            <div class="absolute top-0 left-0 w-full h-full overflow-hidden pointer-events-none">
                {% if props.bg.overlay %}
                    <div class="absolute top-0 left-0 w-full h-full bg-black opacity-50"></div>
                {% endif %}

                {% if props.bg.image %}

                    <img class="block w-full h-full object-cover" src="{{ root }}{{ props.bg.image }}" alt="">

                {% endif %}

                {% if props.bg.video %}

                    <video class="block w-full h-full object-cover" {% if props.bg.poster %} data-poster="{{ root }}{{ props.bg.poster }}"{% endif %} muted playsinline autoplay loop preload="none">
                        <source src="{{ root }}{{ props.bg.video }}" type="video/mp4">
                    </video>

                {% endif %}
            </div>

        {% endif %}

        <div class="relative">
        {%- if caller -%}
            {%- call render( props ) %}{{ caller() }}{% endcall -%}
        {%- else -%}
            {{- render( props ) -}}
        {%- endif -%}
        </div>
    </section>
{%- endmacro -%}
